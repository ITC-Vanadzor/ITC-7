PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE optional_field (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
field_name VARCHAR(20)
);
CREATE TABLE category (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
category VARCHAR(15)
);
CREATE TABLE subcategory (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
name VARCHAR(15),
img INTEGER,
category_id INT NOT NULL,
has_cards INTEGER,
FOREIGN KEY (category_id) REFERENCES category(id)
);
CREATE TABLE city (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
country VARCHAR(20),
region VARCHAR(20),
city VARCHAR(20) NOT NULL
);
CREATE TABLE card (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
icon INTEGER,
title VARCHAR(20) NOT NULL,
image INTEGER,
city_id INTEGER NOT NULL,
id_type INTEGER NOT NULL,
FOREIGN KEY (city_id) REFERENCES city(id),
FOREIGN KEY (id_type) REFERENCES subcategory(id)
);
CREATE TABLE images (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
card_id INTEGER NOT NULL,
img INTEGER NOT NULL,
FOREIGN KEY (card_id) REFERENCES card(id)
);
CREATE TABLE popular (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
card_id INTEGER,
rate INTEGER,
FOREIGN KEY (card_id) REFERENCES card(id)
);
CREATE TABLE detail (
id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
description BLOB,
card_id INTEGER,
FOREIGN KEY (card_id) REFERENCES card(id)
);
CREATE TABLE optional_information (
card_id INTEGER NOT NULL,
field_id INTEGER NOT NULL,
value VARCHAR(30),
FOREIGN KEY (card_id) REFERENCES detail(id),
FOREIGN KEY (field_id) REFERENCES optional_field(id)
);
COMMIT;
