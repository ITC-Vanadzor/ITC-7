Սահմանենք մի քանի օպերատոր կամ ֆունկցիա․

1.mov x , y  - կրկնօրինակում է x-ի արժեքը y հասցեում
2.add r0, r1  - գումարում է r0 և r1  ռեգիստրների պարունակությունը և գրում է r2 ռեգիստրում
3.greater r3, r4  - համեմատում է r3 և r4  ռեգիստրների պարունակությունը` մեծագույնը գրում է r5 ռեգիստրում
4.jump r6, r7, z - համեմատում է r6 և r7  ռեգիստրների պարունակությունը, և երբ r6֊ի պարունակությունը
        մեծ է r7֊ի պարունակությունից, անցում է կատարում z ցուցիչին։


0-ից 99 հասցեներւմ գրված են մեր պայմանական փոփոխականները որոնց սկզբնարժեքը հավասար է 0֊ի

100 հասցեում գրված է մեր մատրիցայի չափսը՝ n֊ը,
101 հասցեից մինչև 101+n*n  գրված են մեր տվյալները։

0 հասցեում պահենք 0,
1 հասցեում պահենք 1,
պայմանական i֊ի արժեքը պահենք 2 հասցեում,
j-ի արժեքը 2 հասցեում,
k-ի արժեքը 3 հասցեում,
բազմապատկում կատարելու համար օգտագործենք 4֊րդ, 5-րդ, 6-րդ և 7-րդ։
4-րդում գրում ենք հաշվիչը, 5-րդում բազմապատկիչը,
6-րդում բազմապատկիչը, 7-րդում արդյունքը։
8-րդում պափումենք վերադարձի կետը
9-րդ հասցեում գրում ենք -1;
10-րդում պահում ենք n-1-ը


     բազմապատկում
     mov 0, 4
     mov 0, 5
     mov 0, 6
     mov 0, 7
metka_bazmapatkum
     mov 4, r0
     mov
     add

     mov r1, 4 /4-րդ հասցեի արժեքը ավելացրեցինք մեկով
     add 6, 7
     mov r1, 7 /7-րդ հասցեի արժեքը ավելացրեցինք 6-րդ հասցեում գրված արժեքով
     jump 5, 4, metka_bazmapatkum
     jump 0, 8, metka_main              // կվերադարնանք, թե ինչ գրենք 0֊ի փոխարեն
     jump 0, 8, metka_right_neighbor    // կվերադարնանք, թե ինչ գրենք 0֊ի փոխարեն




metka_right_neighbor
     mov 2, 3

     mov 2, 5
     mov 100, 6
     mov 0, 4
     mov 0, 7
     metka_bazmapatkum
     jump (101+7+3), 1, x1
     jump 3, 10, x0


     add 1, 3
     mov r1, 3
     jump 100, 3, metka_right_neighbor
x0
     add 9, 3
     mov r1, 3
x1










#include <iostream>


int main()
{
  int field = -1;
  do
  {
    std::cout << "Please iput size of field n = ";
    std::cin >> field;
  }
  while (field < 2);

  int a[field][field];
  for (int i=0;i<field;++i)
  {
      for (int j=0;j<field;++j)
      {
         std::cout << "Please input a[" << i+1 << "][" << j+1 << "]= ";
         std::cin >> a[i][j];
      }
  }
  int count=0;
  for (int i=0;i<field;++i)
  {
      for (int j=0;j<field;++j)
      {
          if (a[i][j]==1)

          {
             if (i==0 || a[i-1][j]==0)
             {
                for (int k=j; k< field; ++k)
                {
                  if (a[i][k]==0 )
                      {
                        j=k;
                      }
                }
                std::cout << i << ", " << j << std::endl;
                count=count+1;
                std::cout << "Count = " << count << std::endl;
             }
          }
      }
  }
  std::cout << "Count of boat is equal " << count << std::endl;
  return 0;
}